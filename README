This is a sample spring boot batch project

The following technologies are used 
-Spring Batch
-Stax


docker build -f Dockerfile-activemq -t docker-amq . 
docker run -it --publish=61616:61616  docker-amq:latest

Run    docker network create --driver bridge app-batch-net
RUn    docker build -t docker-batch-db -f docker/Dockerfile.db .
Run    docker run \
			--name=docker-batch-db \
			--publish=3306:3306  \
			--network app-batch-net  \
			docker-batch-db:latest   

Run    docker build -t docker-batch-jms -f docker/Dockerfile.jms .
Run    docker run \
			--name=docker-batch-jms \
			--publish=61616:61616  \
			--network app-batch-net  \
			docker-batch-jms:latest   
			
Run    docker build -t docker-batch-master -f docker/Dockerfile.master.app .
Run    docker run \
			--name=docker-batch-master \
			--publish=8080:8080  \
			--network app-batch-net  \
			docker-batch-master:latest   

Run    docker build -t docker-batch-slave -f docker/Dockerfile.slave.app .
Run    docker run \
			--name=docker-batch-slave \
			--publish=8081:8081  \
			--network app-batch-net  \
			docker-batch-slave:latest   
			
			
			
			
Note: spring batch admin is deprecated so for the  
ease of this example I've made exposed endoints to control the jobs

check the job status with this
http://localhost:8080/app/batch/status/{id}

start the job
http://localhost:8080/app/batch/simplebatchjob/start
http://localhost:8080/app/batch/simplepartitioningbatchjob/start
http://localhost:8080/app/batch/simpleremotepartitioningbatchjob/start

